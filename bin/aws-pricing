#!/usr/bin/env perl6

use v6;
use lib 'lib';
use AWS::Pricing;
constant AWSP = AWS::Pricing;

sub USAGE {
    say q:to/END/;
    Usage: aws-pricing services
           aws-pricing service-offers <service_code>;
           aws-pricing service-codes
           aws-pricing regions 
           aws-pricing version

    Optional arguments:

      service-offers

      --format     - json|csv Default json
      --region     - Filter AWS region to pull offer data
      --header     - Display the CSV header. Disabled by default

      general

      --refresh    - Force cache_dir refresh
      --cache_path - Path to cache path service offer files (Default ~/.aws-pricing)
    END
}

multi MAIN(
    'services', 
    Bool :$refresh    = False,
    Str  :$cache_path = "$*HOME/.aws-pricing"
    --> Bool
) {
    # List all Service Offer indexes
    say AWSP::services(
        config => AWSP::config(
            refresh    => $refresh,
            cache_path => $cache_path
        )
    );
}

multi MAIN(
    'service-offers', 
    Str  $service_code,
    Bool :$refresh         = False,
    Bool :$header  = False,
    Str  :$cache_path      = "$*HOME/.aws-pricing",
    Str  :$region          = '',
    Str  :$format where { $format ~~ 'json'|'csv'} = 'json'
    --> Bool
) {
    # List current offers for specific service
    say AWSP::service-offers(
        display_header  => $header,
        service_code    => $service_code,
        format          => $format,
        region          => $region,
        config          => AWSP::config(
            refresh     => $refresh,
            cache_path  => $cache_path
        )
    );

}

multi MAIN(
    'service-codes'
    --> Seq 
) {
    # List all Service Offer indexes
    AWSP::service-codes.map({ .say });
}

multi MAIN(
    'regions'
    --> Seq
) {
    # List all Service Offer indexes
    AWSP::regions.map({ .say });
}

multi MAIN('version') {
    say "aws-pricing {AWSP.^ver}";
}

# vim: ft=perl6
